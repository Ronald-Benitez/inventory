generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Inventory {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  unit      String
  quantity  Int
  price     Float
  unitPrice Float
  type      Types    @relation(fields: [typeId], references: [id])
  typeId    Int
  enterprise Enterprises @relation(fields: [enterpriseId], references: [id])
  enterpriseId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Products {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  type      Types    @relation(fields: [typeId], references: [id])
  typeId    Int
  enterprise Enterprises @relation(fields: [enterpriseId], references: [id])
  enterpriseId Int
  description String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Types {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  inventories Inventory[]
  products Products[]
}

model Sales {
  id        Int      @id @default(autoincrement())
  products  String
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enterprises {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  inventories Inventory[]
  products Products[]
}